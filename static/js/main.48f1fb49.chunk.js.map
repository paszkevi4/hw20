{"version":3,"sources":["store/postsReducer.ts","store/usersReducer.ts","store/store.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/Posts/PostsContainer.js","components/AddPost/AddPost.js","components/AddPost/AddPostContainer.js","App.js","index.js"],"names":["initialState","author","publicationDate","Date","text","image","liked","likesAmount","commentariesAmount","repostAmount","reposted","postsReducer","state","action","type","post","map","el","i","index","name","avatar","nickname","usersReducer","reducers","combineReducers","posts","users","store","createStore","window","connect","dispatch","likePost","likePostPostAC","repost","repostPostAC","date","content","likes","comments","reposts","props","className","src","toLocaleDateString","getHours","getMinutes","alt","onClick","style","color","Favorite","Chat","Share","Posts","AddPost","useState","user","setUser","setText","setImageUrl","length","placeholder","value","onChange","e","target","createNewPost","now","newPost","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48f1fb49.chunk.js","sourcesContent":["import store from './store';\r\n\r\nconst CREATE_NEW_POST = 'CREATE_NEW_POST';\r\nconst LIKE_POST = 'LIKE_POST';\r\nconst REPOST = 'REPOST';\r\n\r\ntype PostType = {\r\n  author: number;\r\n  publicationDate: Date | string;\r\n  text: string;\r\n  image: string;\r\n  likesAmount: number;\r\n  liked: boolean;\r\n  commentariesAmount: number;\r\n  repostAmount: number;\r\n  reposted: boolean;\r\n};\r\n\r\ntype createPostACType = {\r\n  type: typeof CREATE_NEW_POST;\r\n  post: PostType;\r\n};\r\n\r\ntype likePostACType = {\r\n  type: typeof LIKE_POST;\r\n  index: number;\r\n  liked: boolean;\r\n};\r\n\r\ntype repostACType = {\r\n  type: typeof REPOST;\r\n  index: number;\r\n  reposted: boolean;\r\n};\r\n\r\ntype actionType = createPostACType | likePostACType | repostACType;\r\n\r\nconst initialState: Array<PostType> = [\r\n  {\r\n    author: 0,\r\n    publicationDate: new Date(2020, 8, 15, 23, 15),\r\n    text: 'Hello, world!',\r\n    image:\r\n      'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n    liked: false,\r\n    likesAmount: 5,\r\n    commentariesAmount: 3,\r\n    repostAmount: 1,\r\n    reposted: true,\r\n  },\r\n  {\r\n    author: 1,\r\n    publicationDate: new Date(2020, 8, 17, 15, 47),\r\n    text: 'Hello, everyone!',\r\n    image:\r\n      'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n\r\n    liked: true,\r\n    likesAmount: 51,\r\n    commentariesAmount: 31,\r\n    repostAmount: 11,\r\n    reposted: false,\r\n  },\r\n];\r\n\r\nconst postsReducer = (state = initialState, action: actionType): Array<PostType> => {\r\n  switch (action.type) {\r\n    case CREATE_NEW_POST:\r\n      return [...state, { ...action.post }];\r\n    case LIKE_POST:\r\n      return [\r\n        ...state.map((el, i) => {\r\n          if (i === action.index) {\r\n            return { ...el, liked: action.liked };\r\n          }\r\n          return { ...el };\r\n        }),\r\n      ];\r\n    case REPOST:\r\n      return [\r\n        ...state.map((el, i) => {\r\n          if (i === action.index) {\r\n            return { ...el, reposted: action.reposted };\r\n          }\r\n          return { ...el };\r\n        }),\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createPostAC = (post: PostType): createPostACType => ({\r\n  type: CREATE_NEW_POST,\r\n  post,\r\n});\r\n\r\nexport const likePostPostAC = (index: number, liked: boolean): likePostACType => ({\r\n  type: LIKE_POST,\r\n  index,\r\n  liked,\r\n});\r\n\r\nexport const repostPostAC = (index: number, reposted: boolean): repostACType => ({\r\n  type: REPOST,\r\n  index,\r\n  reposted,\r\n});\r\n\r\nexport default postsReducer;\r\n","type UserType = {\r\n  name: string;\r\n  avatar: string;\r\n  nickname: string;\r\n};\r\n\r\nconst initialState: Array<UserType> = [\r\n  {\r\n    name: 'Anakin Skywalker',\r\n    avatar:\r\n      'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg',\r\n    nickname: 'dart_vader',\r\n  },\r\n  {\r\n    name: 'Bruce Wayne',\r\n    avatar: 'https://icons.iconarchive.com/icons/diversity-avatars/avatars/256/batman-icon.png',\r\n    nickname: 'batman_official',\r\n  },\r\n];\r\n\r\nconst usersReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nlet reducers = combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { likePostPostAC, repostPostAC } from '../../../store/postsReducer';\r\nimport './post.css';\r\nimport { Favorite, Chat, Share } from '@material-ui/icons';\r\n\r\nconst Post = ({\r\n  index,\r\n  name,\r\n  avatar,\r\n  nickname,\r\n  date,\r\n  content,\r\n  image,\r\n  liked,\r\n  likes,\r\n  comments,\r\n  reposted,\r\n  reposts,\r\n  ...props\r\n}) => {\r\n  //const [liked, setLiked] = useState(props.liked);\r\n  return (\r\n    <div className=\"post_container\">\r\n      <div className=\"post_header\">\r\n        <img className=\"post_header__avatar\" src={avatar} />\r\n        <div className=\"post_header__name\">\r\n          <div>\r\n            {name}\r\n            <span>@{nickname}</span>\r\n          </div>\r\n          <div>\r\n            {date.toLocaleDateString('ru-RU')} {date.getHours()}:{date.getMinutes()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"post_body\">\r\n        {content}\r\n        {image && <img src={image} alt={image} />}\r\n      </div>\r\n\r\n      <div className=\"post_footer\">\r\n        <div\r\n          onClick={() => {\r\n            props.likePost(index, !liked);\r\n          }}\r\n          style={liked ? { color: 'red' } : { color: 'black' }}>\r\n          <Favorite />\r\n          {likes + liked}\r\n        </div>\r\n        <div>\r\n          <Chat />\r\n          {comments}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            props.repost(index, !reposted);\r\n          }}\r\n          style={reposted ? { color: 'blue' } : { color: 'black' }}>\r\n          <Share />\r\n          {reposts + reposted}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    likePost: (index, liked) => {\r\n      dispatch(likePostPostAC(index, liked));\r\n    },\r\n    repost: (index, reposted) => {\r\n      dispatch(repostPostAC(index, reposted));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Post);\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\n\r\nconst Posts = ({ posts, users }) => {\r\n  return (\r\n    <div className=\"posts_column\">\r\n      {posts.map((post, i) => {\r\n        return (\r\n          <Post\r\n            index={i}\r\n            name={users[post.author].name}\r\n            avatar={users[post.author].avatar}\r\n            nickname={users[post.author].nickname}\r\n            date={post.publicationDate}\r\n            content={post.text}\r\n            image={post.image}\r\n            liked={post.liked}\r\n            likes={post.likesAmount}\r\n            comments={post.commentariesAmount}\r\n            reposted={post.reposted}\r\n            reposts={post.repostAmount}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import Posts from './Posts';\r\nimport { connect } from 'react-redux';\r\nimport createPostAC from '../../store/postsReducer';\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    posts: store.posts,\r\n    users: store.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createPost: (newPost) => {\r\n      dispatch(createPostAC(newPost));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Posts);\r\n","import React, { useState } from 'react';\r\nimport './addpost.css';\r\n\r\nconst AddPost = (props) => {\r\n  let [user, setUser] = useState(0);\r\n  let [text, setText] = useState('');\r\n  let [image, setImageUrl] = useState('');\r\n\r\n  const changeUser = () => {\r\n    if (user < props.users.length - 1) {\r\n      setUser(++user);\r\n    } else {\r\n      setUser(0);\r\n    }\r\n  };\r\n\r\n  const submitForm = () => {\r\n    setText('');\r\n    setImageUrl('');\r\n    props.createNewPost({\r\n      author: user,\r\n      avatar: 'string',\r\n      nickname: 'string',\r\n      publicationDate: new Date(Date.now()),\r\n      text: text,\r\n      image: image,\r\n      likesAmount: 0,\r\n      liked: false,\r\n      commentariesAmount: 0,\r\n      repostAmount: 0,\r\n      reposted: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"addpost_container\">\r\n      <div onClick={changeUser} className=\"addpost_avatar\">\r\n        <img src={props.users[user].avatar} />\r\n        <span>swap user</span>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's going on?\"\r\n        value={text}\r\n        onChange={(e) => {\r\n          setText(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        placeholder=\"image url\"\r\n        value={image}\r\n        onChange={(e) => {\r\n          setImageUrl(e.target.value);\r\n        }}\r\n      />\r\n      <button onClick={submitForm}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","import { connect } from 'react-redux';\r\nimport AddPost from './AddPost';\r\nimport { createPostAC } from '../../store/postsReducer';\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    users: store.users,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createNewPost: (newPost) => {\r\n      dispatch(createPostAC(newPost));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\n//components\nimport Posts from './components/Posts/PostsContainer';\nimport AddPost from './components/AddPost/AddPostContainer';\n\n//styles\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <AddPost />\n        <Posts />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}